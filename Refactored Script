Sub AllStocksAnalysisRefactored()
    Dim startTime As Single
    Dim endTime  As Single
    
    'Input the year of the sheet we would like to run the analysis on
    yearValue = InputBox("What year would you like to run the analysis on?")

    startTime = Timer
    
    'Format the output sheet on All Stocks Analysis worksheet
    Worksheets("All Stocks Analysis").Activate
    
    Range("A1").Value = "All Stocks (" + yearValue + ")"
    
    'Create a header row
    Cells(3, 1).Value = "Ticker"
    Cells(3, 2).Value = "Total Daily Volume"
    Cells(3, 3).Value = "Return"

    'Initialize array of all tickers
    Dim tickers(12) As String
    
    tickers(0) = "AY"
    tickers(1) = "CSIQ"
    tickers(2) = "DQ"
    tickers(3) = "ENPH"
    tickers(4) = "FSLR"
    tickers(5) = "HASI"
    tickers(6) = "JKS"
    tickers(7) = "RUN"
    tickers(8) = "SEDG"
    tickers(9) = "SPWR"
    tickers(10) = "TERP"
    tickers(11) = "VSLR"
    
    'Activate data worksheet
    Worksheets(yearValue).Activate
    
    'Get the number of rows to loop over
    RowCount = Cells(Rows.Count, "A").End(xlUp).Row
    
    'Created a ticker Index that incrementally accesses each stock ticker after they are looped over
        Dim tickerIndex As Integer
        tickerIndex = 0
        

    'Created three output arrays that will store the analysis data of each ticker
        
        Dim tickerVolumes(12) As Long
        Dim tickerStartingPrices(12) As Single
        Dim tickerEndingPrices(12) As Single
        
    
    'Create a for loop to initialize the tickerVolumes to zero
    ''Volume has to be reset to zero after each consecutive ticker
    For I = 0 To 11
    
        tickerVolumes(I) = 0
        
    Next I
        
    'Loop over all the rows in the spreadsheet being analyzed
    For I = 2 To RowCount
    
         ''Increase volume for current ticker using the current tickerIndex.
    
            If Cells(I, 1).Value = tickers(tickerIndex) Then
            
                tickerVolumes(tickerIndex) = tickerVolumes(tickerIndex) + Cells(I, 8).Value
                
            End If
        
        ''Check if the current row is the first row with the selected tickerIndex.
        
            If Cells(I - 1, 1).Value <> tickers(tickerIndex) And Cells(I, 1).Value = tickers(tickerIndex) Then
        
                tickerStartingPrices(tickerIndex) = Cells(I, 6).Value

            End If
        
        ''Check if the current row is the last row with the selected ticker.
         '''If the next row’s ticker doesn’t match, increase the tickerIndex.
            
            If Cells(I + 1, 1).Value <> tickers(tickerIndex) And Cells(I, 1).Value = tickers(tickerIndex) Then
        
                tickerEndingPrices(tickerIndex) = Cells(I, 6).Value

            'Increase the tickerIndex so next ticker can be analyzed and stored in output arrays.
                 tickerIndex = tickerIndex + 1
            
            End If
    
    Next I
    
    'Loop through the created output arrays to output the Ticker, Total Daily Volume, and Return.
    For I = 0 To 11
        
        Worksheets("All Stocks Analysis").Activate
        
        Cells(4 + I, 1).Value = tickers(I)
        Cells(4 + I, 2).Value = tickerVolumes(I)
        Cells(4 + I, 3).Value = tickerEndingPrices(I) / tickerStartingPrices(I) - 1
        
    Next I
    
    'Formatting
    Worksheets("All Stocks Analysis").Activate
    Range("A3:C3").Font.FontStyle = "Bold"
    Range("A3:C3").Borders(xlEdgeBottom).LineStyle = xlContinuous
    Range("B4:B15").NumberFormat = "#,##0"
    Range("C4:C15").NumberFormat = "0.0%"
    Columns("B").AutoFit

    dataRowStart = 4
    dataRowEnd = 15

    For I = dataRowStart To dataRowEnd
        
        If Cells(I, 3) > 0 Then
            
            Cells(I, 3).Interior.COLOR = vbGreen
            
        Else
        
            Cells(I, 3).Interior.COLOR = vbRed
            
        End If
        
    Next I
 
    endTime = Timer
    MsgBox "This code ran in " & (endTime - startTime) & " seconds for the year " & (yearValue)

End Sub
